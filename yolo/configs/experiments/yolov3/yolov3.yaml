runtime:
  distribution_strategy: mirrored
  mixed_precision_dtype: float16
  loss_scale: "dynamic"
  num_gpus: 1
task:
  model:
    base: 
      backbone:
        type: 'darknet'
        darknet:
          model_id: 'cspdarknet53'
      decoder:
        version: v3
        type: regular
      darknet_weights_file: 'cache://csdarknet53.weights'
      darknet_weights_cfg: 'cache://csdarknet53.cfg'
    num_classes: 80
    _boxes: ["(10, 13)", "(16, 30)", "(33, 23)","(30, 61)", "(62, 45)", "(59, 119)","(116, 90)", "(156, 198)", "(373, 326)"]
    _input_size: null
    boxes_per_scale: 3
    min_level: 3
    max_level: 5
    norm_activation:
      activation: leaky
      norm_epsilon: 0.001
      norm_momentum: 0.99
      use_sync_bn: false
    decoder_activation: leaky
    filter:
      anchor_generation_scale: 416
      ignore_thresh: 0.7
      loss_type: giou
      max_boxes: 200
      use_tie_breaker: false
  train_data:
    global_batch_size: 64
    shuffle_buffer_size: 200
    tfds_data_dir: ''
    tfds_download: true
    tfds_name: coco
    tfds_split: train
    drop_remainder: true
    dtype: float16
    input_path: ''
    is_training: true
    parser:
      fixed_size: false
      image_h: 416
      image_w: 416
      aug_rand_saturation: true
      aug_rand_brightness: true
      aug_rand_zoom: true
      aug_rand_hue: true
      seed: 10
    shuffle_buffer_size: 10000
  validation_data:
    global_batch_size: 8
    tfds_data_dir: ''
    tfds_download: true
    tfds_name: coco
    tfds_split: validation
    dtype: float16
    input_path: ''
    is_training: false
    parser:
      image_h: 416
      image_w: 416
      aug_rand_saturation: true
      aug_rand_brightness: true
      aug_rand_zoom: true
      aug_rand_hue: true
      shuffle_buffer_size: 10000
    shuffle_buffer_size: 2
  weight_decay: 0.0005
  init_checkpoint: ''
  annotation_file: null
  gradient_clip_norm: 0.0
  load_darknet_weights: true
  darknet_load_decoder: False
trainer:
  train_steps: 500200 # 160 epochs at 64 batchsize
  validation_steps: 1000
  steps_per_loop: 10000
  summary_interval: 10000
  validation_interval: 10000
  checkpoint_interval: 10000
  optimizer_config:
    learning_rate:
      type: stepwise
      stepwise:
        boundaries: [400000, 450000]
        name: PiecewiseConstantDecay
        values: [0.001, 0.0001, 0.00001] #[]
    optimizer:
      type: sgd
      sgd:
        momentum: 0.9
        name: SGD
    warmup:
      type: 'linear'
      linear:
        warmup_steps: 1000 #learning rate rises from 0 to 0.0013 over 1000 steps
