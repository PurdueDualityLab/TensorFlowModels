linear
linear
linear
Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(32, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(32, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(1024, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(1024, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 255, kernel_size=(1, 1), stride=(1, 1))
Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 255, kernel_size=(1, 1), stride=(1, 1))
Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
BatchNorm2d(1024, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
Conv2d(1024, 255, kernel_size=(1, 1), stride=(1, 1))
2500
torch.Size([2, 3, 640, 640])
72
177
147
['1000', '100238'] torch.Size([255, 1024, 1, 1]) -1.846535 0.04583309 0.08555522 0.030421564 0.16180988
torch.Size([2, 3, 640, 640])
96
63
21
['100274', '100283'] torch.Size([255, 1024, 1, 1]) -6.2080173 0.041097756 0.038700514 0.0242553 0.104053564
torch.Size([2, 3, 640, 640])
0
18
33
['100428', '100489'] torch.Size([255, 1024, 1, 1]) 1.4914638 0.034281872 0.021866592 0.009514673 0.06566314
torch.Size([2, 3, 640, 640])
33
42
33
['100510', '100582'] torch.Size([255, 1024, 1, 1]) 2.4958034 0.028539335 0.046464615 0.03180486 0.10680881
torch.Size([2, 3, 640, 640])
81
192
132
['100624', '100723'] torch.Size([255, 1024, 1, 1]) -2.1424417 0.04540151 0.13736482 0.03528238 0.21804872
torch.Size([2, 3, 640, 640])
15
36
24
['10092', '101022'] torch.Size([255, 1024, 1, 1]) 0.22604918 0.04015596 0.025022835 0.05154722 0.11672602
torch.Size([2, 3, 640, 640])
0
18
30
['101068', '101420'] torch.Size([255, 1024, 1, 1]) 9.195526 0.008477816 0.011255422 0.02082394 0.04055718
torch.Size([2, 3, 640, 640])
6
33
45
['101762', '101780'] torch.Size([255, 1024, 1, 1]) 0.17936546 0.014189424 0.015360493 0.038391273 0.06794119
torch.Size([2, 3, 640, 640])
36
18
9
['101787', '101884'] torch.Size([255, 1024, 1, 1]) 3.0802164 0.029343044 0.009701321 0.013169134 0.052213497
torch.Size([2, 3, 640, 640])
0
15
30
['102331', '102356'] torch.Size([255, 1024, 1, 1]) 1.6926706 0.011322235 0.022195932 0.0014811044 0.03499927
torch.Size([2, 3, 640, 640])
84
96
60
['102411', '102644'] torch.Size([255, 1024, 1, 1]) 1.321312 0.020384975 0.0362866 0.010518992 0.067190565
torch.Size([2, 3, 640, 640])
45
60
54
['102707', '102805'] torch.Size([255, 1024, 1, 1]) -5.0424376 0.022811789 0.037015297 0.03379441 0.09362149
torch.Size([2, 3, 640, 640])
165
117
30
['102820', '103548'] torch.Size([255, 1024, 1, 1]) 6.5157933 0.053966917 0.047760602 0.03910558 0.1408331
torch.Size([2, 3, 640, 640])
36
51
27
['103585', '10363'] torch.Size([255, 1024, 1, 1]) 0.89498746 0.028181592 0.021156354 0.012091747 0.061429694
torch.Size([2, 3, 640, 640])
57
39
39
['103723', '104119'] torch.Size([255, 1024, 1, 1]) 2.236976 0.058961093 0.030630581 0.03310012 0.122691795
torch.Size([2, 3, 640, 640])
9
15
24
['104198', '104424'] torch.Size([255, 1024, 1, 1]) 1.8326713 0.04692855 0.010865023 0.008766975 0.06656055
torch.Size([2, 3, 640, 640])
42
39
27
['104455', '104572'] torch.Size([255, 1024, 1, 1]) 0.50675666 0.03919157 0.026366927 0.05033002 0.11588851
torch.Size([2, 3, 640, 640])
48
117
75
['104603', '104612'] torch.Size([255, 1024, 1, 1]) 0.9893203 0.05407585 0.087816015 0.06638051 0.20827237
torch.Size([2, 3, 640, 640])
111
87
42
['104619', '104666'] torch.Size([255, 1024, 1, 1]) -0.7832211 0.060721576 0.043026984 0.00567956 0.10942812
torch.Size([2, 3, 640, 640])
69
111
57
['104669', '104782'] torch.Size([255, 1024, 1, 1]) -1.5946349 0.040572304 0.05674657 0.012258875 0.109577745
torch.Size([2, 3, 640, 640])
18
39
45
['104803', '105014'] torch.Size([255, 1024, 1, 1]) -3.1146502 0.02592643 0.03536903 0.03910956 0.10040502
torch.Size([2, 3, 640, 640])
45
93
48
['105249', '105264'] torch.Size([255, 1024, 1, 1]) 0.31817296 0.025601748 0.03299112 0.0013144745 0.059907343
torch.Size([2, 3, 640, 640])
57
93
69
['105335', '105455'] torch.Size([255, 1024, 1, 1]) -2.6546469 0.031221105 0.07318957 0.016517099 0.12092778
torch.Size([2, 3, 640, 640])
114
105
60
['10583', '105912'] torch.Size([255, 1024, 1, 1]) -0.09958093 0.04445086 0.044784404 0.018804725 0.10803999
torch.Size([2, 3, 640, 640])
24
15
21
['105923', '106048'] torch.Size([255, 1024, 1, 1]) -0.5825695 0.03781734 0.017803855 0.034066316 0.08968751
torch.Size([2, 3, 640, 640])
33
42
51
['106235', '106266'] torch.Size([255, 1024, 1, 1]) -2.0511577 0.041294392 0.045259014 0.016117226 0.10267064
torch.Size([2, 3, 640, 640])
0
9
24
['106281', '106330'] torch.Size([255, 1024, 1, 1]) -3.1054242 0.019099202 0.008885214 0.006499449 0.034483865
torch.Size([2, 3, 640, 640])
54
66
36
['106389', '106563'] torch.Size([255, 1024, 1, 1]) -3.5859826 0.04238508 0.03569257 0.023384634 0.101462275
torch.Size([2, 3, 640, 640])
3
12
21
['106757', '106881'] torch.Size([255, 1024, 1, 1]) -0.8831744 0.049219493 0.012933204 0.0019164613 0.06406916
torch.Size([2, 3, 640, 640])
66
99
60
['106912', '10707'] torch.Size([255, 1024, 1, 1]) -3.7881725 0.026616184 0.040427946 0.0120520685 0.0790962
torch.Size([2, 3, 640, 640])
9
21
39
['107087', '107094'] torch.Size([255, 1024, 1, 1]) 2.6733587 0.04755202 0.028459165 0.03491614 0.11092732
torch.Size([2, 3, 640, 640])
78
162
114
['107226', '107339'] torch.Size([255, 1024, 1, 1]) 2.4557304 0.04216227 0.09306699 0.011867636 0.1470969
torch.Size([2, 3, 640, 640])
12
21
24
['107554', '10764'] torch.Size([255, 1024, 1, 1]) -1.5285919 0.038865272 0.018416982 0.0683526 0.12563485
torch.Size([2, 3, 640, 640])
128
96
45
['107851', '108026'] torch.Size([255, 1024, 1, 1]) -4.2245398 0.04991355 0.04770828 0.021029046 0.118650876
torch.Size([2, 3, 640, 640])
39
60
69
['108244', '108253'] torch.Size([255, 1024, 1, 1]) -0.3903144 0.034155775 0.04693541 0.026083387 0.10717457
torch.Size([2, 3, 640, 640])
0
6
21
['108440', '108495'] torch.Size([255, 1024, 1, 1]) 3.4428315 0.026773354 0.013921812 0.00456125 0.045256417
torch.Size([2, 3, 640, 640])
51
45
27
['108503', '108864'] torch.Size([255, 1024, 1, 1]) -0.3410892 0.049204364 0.025636889 0.016237853 0.09107911
torch.Size([2, 3, 640, 640])
12
33
45
['109055', '109118'] torch.Size([255, 1024, 1, 1]) -3.2996151 0.034523945 0.03724192 0.091509715 0.16327558
torch.Size([2, 3, 640, 640])
162
84
18
['109313', '109441'] torch.Size([255, 1024, 1, 1]) 4.29848 0.038005557 0.05174417 0.01159238 0.101342104
torch.Size([2, 3, 640, 640])
6
45
45
['10977', '109798'] torch.Size([255, 1024, 1, 1]) 4.2747974 0.024869118 0.031622007 0.036693044 0.09318417
torch.Size([2, 3, 640, 640])
51
96
51
['109827', '109900'] torch.Size([255, 1024, 1, 1]) -1.4415038 0.03202119 0.045970045 0.012219811 0.09021104
torch.Size([2, 3, 640, 640])
0
12
36
['109916', '10995'] torch.Size([255, 1024, 1, 1]) -2.6166742 0.014743516 0.014633374 0.021069035 0.050445925
torch.Size([2, 3, 640, 640])
33
36
33
['109976', '109992'] torch.Size([255, 1024, 1, 1]) 6.067319 0.040907916 0.047650427 0.0047932523 0.093351595
torch.Size([2, 3, 640, 640])
54
102
60
['110042', '110211'] torch.Size([255, 1024, 1, 1]) -0.34974483 0.020537367 0.04111472 0.0045381794 0.066190265
torch.Size([2, 3, 640, 640])
0
12
15
['110282', '110359'] torch.Size([255, 1024, 1, 1]) 0.017169558 0.010570635 0.008141212 0.0013836923 0.020095538
torch.Size([2, 3, 640, 640])
9
24
39
['110449', '11051'] torch.Size([255, 1024, 1, 1]) -3.1365333 0.034431618 0.02328827 0.03759547 0.09531535
torch.Size([2, 3, 640, 640])
9
18
33
['110638', '110721'] torch.Size([255, 1024, 1, 1]) -3.8344805 0.02225305 0.023073656 0.012212027 0.057538733
torch.Size([2, 3, 640, 640])
12
45
45
['110784', '110884'] torch.Size([255, 1024, 1, 1]) -2.7138796 0.026346654 0.02927433 0.018195974 0.073816955
torch.Size([2, 3, 640, 640])
42
93
66
['110972', '110999'] torch.Size([255, 1024, 1, 1]) -1.0668907 0.022635773 0.029234294 0.023514636 0.075384706
torch.Size([2, 3, 640, 640])
87
138
87
['111036', '111086'] torch.Size([255, 1024, 1, 1]) -2.7601175 0.055724144 0.08741753 0.078817055 0.22195873
torch.Size([2, 3, 640, 640])
30
60
33
['111179', '111207'] torch.Size([255, 1024, 1, 1]) 4.0793443 0.037495196 0.027334498 0.018167837 0.08299753
torch.Size([2, 3, 640, 640])
3
36
45
['11122', '11149'] torch.Size([255, 1024, 1, 1]) 0.9694198 0.011948672 0.017484028 0.0012025572 0.030635256
torch.Size([2, 3, 640, 640])
21
51
45
['111609', '111951'] torch.Size([255, 1024, 1, 1]) -3.4969413 0.033090703 0.029058356 0.010605697 0.072754756
torch.Size([2, 3, 640, 640])
114
81
30
['11197', '112110'] torch.Size([255, 1024, 1, 1]) -0.9093254 0.031382766 0.03581181 0.019636275 0.086830854
torch.Size([2, 3, 640, 640])
93
120
54
['112298', '112378'] torch.Size([255, 1024, 1, 1]) -1.2678565 0.041513514 0.064614676 0.015635606 0.121763796
torch.Size([2, 3, 640, 640])
3
15
30
['112626', '112634'] torch.Size([255, 1024, 1, 1]) -2.3560653 0.008061099 0.01313745 0.007793515 0.028992064
torch.Size([2, 3, 640, 640])
15
21
33
['112798', '112997'] torch.Size([255, 1024, 1, 1]) 1.0443246 0.024278492 0.026711944 0.0060953605 0.057085797
torch.Size([2, 3, 640, 640])
15
21
30
['113051', '113235'] torch.Size([255, 1024, 1, 1]) -7.4420905 0.018867588 0.016733926 0.013466066 0.04906758
torch.Size([2, 3, 640, 640])
0
42
60
['113354', '113403'] torch.Size([255, 1024, 1, 1]) 1.3240092 0.03465376 0.048110507 0.02253399 0.10529826
torch.Size([2, 3, 640, 640])
87
180
153
['113589', '113720'] torch.Size([255, 1024, 1, 1]) 0.89642704 0.027427694 0.08168478 0.025166439 0.13427892
torch.Size([2, 3, 640, 640])
45
111
81
['113867', '114049'] torch.Size([255, 1024, 1, 1]) 0.14947343 0.064836174 0.07922351 0.0405831 0.18464279
torch.Size([2, 3, 640, 640])
0
0
42
['114770', '114871'] torch.Size([255, 1024, 1, 1]) -9.531051 0.01203881 0.021542264 0.0063417954 0.03992287
torch.Size([2, 3, 640, 640])
276
342
150
['114884', '114907'] torch.Size([255, 1024, 1, 1]) -0.7270017 0.037035402 0.1526005 0.019055307 0.20869121
torch.Size([2, 3, 640, 640])
39
81
54
['11511', '115118'] torch.Size([255, 1024, 1, 1]) -1.189086 0.04323965 0.047031518 0.026266355 0.116537526
torch.Size([2, 3, 640, 640])
111
198
147
['115245', '115870'] torch.Size([255, 1024, 1, 1]) -4.6384306 0.032868367 0.1339976 0.026419593 0.19328557
torch.Size([2, 3, 640, 640])
0
12
42
['115885', '115898'] torch.Size([255, 1024, 1, 1]) 0.34335995 0.011681997 0.013661776 0.006773943 0.032117717
torch.Size([2, 3, 640, 640])
132
57
42
['115946', '116068'] torch.Size([255, 1024, 1, 1]) 3.9197671 0.029563326 0.03018503 0.007395112 0.06714347
torch.Size([2, 3, 640, 640])
6
24
30
['11615', '116206'] torch.Size([255, 1024, 1, 1]) 6.553653 0.040014368 0.032979116 0.08318632 0.15617982
torch.Size([2, 3, 640, 640])
71
192
168
['116208', '116362'] torch.Size([255, 1024, 1, 1]) -3.8939447 0.040677924 0.10614024 0.059651833 0.20647
torch.Size([2, 3, 640, 640])
48
120
69
['116439', '116479'] torch.Size([255, 1024, 1, 1]) -0.23136683 0.054118343 0.07046543 0.062190488 0.18677425
torch.Size([2, 3, 640, 640])
0
18
54
['116589', '116825'] torch.Size([255, 1024, 1, 1]) 2.8173885 0.01329835 0.023664517 0.07242203 0.109384894
torch.Size([2, 3, 640, 640])
15
33
54
['11699', '117197'] torch.Size([255, 1024, 1, 1]) -4.4515367 0.03926159 0.026020573 0.013229784 0.07851195
torch.Size([2, 3, 640, 640])
12
66
57
['117374', '117425'] torch.Size([255, 1024, 1, 1]) 1.8252832 0.02105032 0.03277243 0.02958718 0.08340993
torch.Size([2, 3, 640, 640])
117
171
84
['117492', '117525'] torch.Size([255, 1024, 1, 1]) 0.13805449 0.046801742 0.095580116 0.032808222 0.17519009
torch.Size([2, 3, 640, 640])
18
24
27
['11760', '117645'] torch.Size([255, 1024, 1, 1]) -0.35010302 0.020576721 0.009895118 0.0058086226 0.03628046
torch.Size([2, 3, 640, 640])
147
108
33
['117719', '117744'] torch.Size([255, 1024, 1, 1]) -1.6918373 0.059644092 0.09193717 0.048810773 0.20039204
torch.Size([2, 3, 640, 640])
45
60
60
['117908', '117914'] torch.Size([255, 1024, 1, 1]) 1.7522717 0.031460132 0.04205476 0.017602379 0.09111727
torch.Size([2, 3, 640, 640])
3
18
33
['11813', '118209'] torch.Size([255, 1024, 1, 1]) 1.4384302 0.018037189 0.015909143 0.0024362386 0.03638257
torch.Size([2, 3, 640, 640])
75
51
36
['118367', '118405'] torch.Size([255, 1024, 1, 1]) -2.3250163 0.04428965 0.0415886 0.015522991 0.10140125
torch.Size([2, 3, 640, 640])
0
12
33
['118515', '118594'] torch.Size([255, 1024, 1, 1]) 2.2788215 0.018761829 0.016518548 0.010862273 0.04614265
torch.Size([2, 3, 640, 640])
18
45
42
['118921', '119038'] torch.Size([255, 1024, 1, 1]) 1.4901197 0.030756963 0.017440245 0.004466691 0.0526639
torch.Size([2, 3, 640, 640])
60
69
45
['119088', '119233'] torch.Size([255, 1024, 1, 1]) -1.5382404 0.03323505 0.04964804 0.03306481 0.1159479
torch.Size([2, 3, 640, 640])
27
48
69
['119365', '119445'] torch.Size([255, 1024, 1, 1]) -0.41103607 0.01981373 0.033016197 0.0033524781 0.056182407
torch.Size([2, 3, 640, 640])
66
69
48
['119452', '119516'] torch.Size([255, 1024, 1, 1]) -3.200325 0.04637963 0.052405998 0.057014644 0.15580027
torch.Size([2, 3, 640, 640])
162
138
42
['119641', '119677'] torch.Size([255, 1024, 1, 1]) -2.5365953 0.031182108 0.04695493 0.005153777 0.083290815
torch.Size([2, 3, 640, 640])
72
45
39
['119828', '119911'] torch.Size([255, 1024, 1, 1]) -3.390986 0.02830764 0.033880707 0.01166535 0.0738537
torch.Size([2, 3, 640, 640])
159
96
42
['119995', '120420'] torch.Size([255, 1024, 1, 1]) 3.3892207 0.03578037 0.0442993 0.0053285947 0.08540827
torch.Size([2, 3, 640, 640])
24
15
6
['120572', '120584'] torch.Size([255, 1024, 1, 1]) 11.135736 0.0125247305 0.011224367 0.0011874046 0.024936503
torch.Size([2, 3, 640, 640])
9
42
51
['12062', '120777'] torch.Size([255, 1024, 1, 1]) -0.8865396 0.031012708 0.047482304 0.102115944 0.18061095
torch.Size([2, 3, 640, 640])
60
90
84
['120853', '121031'] torch.Size([255, 1024, 1, 1]) 1.1366032 0.031625625 0.04295514 0.01092586 0.085506625
torch.Size([2, 3, 640, 640])
187
69
18
['121153', '12120'] torch.Size([255, 1024, 1, 1]) 3.617025 0.04113348 0.065043285 0.020299006 0.12647577
torch.Size([2, 3, 640, 640])
207
150
84
['121242', '121417'] torch.Size([255, 1024, 1, 1]) 2.359491 0.038743433 0.08810585 0.01130365 0.13815293
torch.Size([2, 3, 640, 640])
15
84
111
['121497', '121506'] torch.Size([255, 1024, 1, 1]) -0.5586834 0.03714508 0.078153744 0.011397067 0.12669589
torch.Size([2, 3, 640, 640])
105
87
42
['121586', '121591'] torch.Size([255, 1024, 1, 1]) -0.06074539 0.047193486 0.056271646 0.02695672 0.13042185
torch.Size([2, 3, 640, 640])
48
126
102
['121673', '121744'] torch.Size([255, 1024, 1, 1]) 0.2502705 0.032928046 0.054247163 0.014206551 0.10138176
torch.Size([2, 3, 640, 640])
171
138
81
['122046', '122166'] torch.Size([255, 1024, 1, 1]) 1.3349428 0.034748685 0.054300234 0.019427054 0.108475976
torch.Size([2, 3, 640, 640])
39
30
21
['122217', '122606'] torch.Size([255, 1024, 1, 1]) -1.9534556 0.029436901 0.01842167 0.0015424707 0.049401045
torch.Size([2, 3, 640, 640])
0
9
24
['122672', '122745'] torch.Size([255, 1024, 1, 1]) -0.96518207 0.01284982 0.030502558 0.0013374478 0.044689823
torch.Size([2, 3, 640, 640])
33
45
33
['12280', '122927'] torch.Size([255, 1024, 1, 1]) 3.3520648 0.020334411 0.01868153 0.025556602 0.06457254
torch.Size([2, 3, 640, 640])
132
177
126
['122962', '122969'] torch.Size([255, 1024, 1, 1]) -2.1767378 0.04004995 0.11056677 0.019965244 0.17058197
torch.Size([2, 3, 640, 640])
96
144
90
['123131', '123213'] torch.Size([255, 1024, 1, 1]) -3.4565394 0.030156797 0.059474558 0.0077070454 0.0973384
torch.Size([2, 3, 640, 640])
126
144
99
['123321', '123480'] torch.Size([255, 1024, 1, 1]) 1.5230421 0.06294229 0.15961482 0.08016081 0.30271792
torch.Size([2, 3, 640, 640])
57
144
114
['123585', '123633'] torch.Size([255, 1024, 1, 1]) 0.005093172 0.02515386 0.067667685 0.028441869 0.121263415
torch.Size([2, 3, 640, 640])
54
30
21
['124277', '124442'] torch.Size([255, 1024, 1, 1]) 4.7348113 0.029886816 0.025018705 0.042834792 0.09774031
torch.Size([2, 3, 640, 640])
120
75
48
['124636', '124659'] torch.Size([255, 1024, 1, 1]) 0.6440499 0.046771884 0.04531592 0.0398933 0.1319811
torch.Size([2, 3, 640, 640])
114
99
54
['124798', '124975'] torch.Size([255, 1024, 1, 1]) 1.9779857 0.026494717 0.03996307 0.003493749 0.069951534
torch.Size([2, 3, 640, 640])
54
51
69
['125062', '125072'] torch.Size([255, 1024, 1, 1]) -4.247068 0.05233224 0.052190103 0.062293887 0.16681623
torch.Size([2, 3, 640, 640])
15
39
72
['125129', '125211'] torch.Size([255, 1024, 1, 1]) -0.13430357 0.047320586 0.03899902 0.010785738 0.09710535
torch.Size([2, 3, 640, 640])
9
21
15
['125245', '125257'] torch.Size([255, 1024, 1, 1]) -1.397623 0.016839609 0.02221309 0.0034116204 0.04246432
torch.Size([2, 3, 640, 640])
3
27
33
['125405', '125472'] torch.Size([255, 1024, 1, 1]) -0.5944163 0.029081723 0.010938861 0.012082094 0.052102678
torch.Size([2, 3, 640, 640])
225
168
84
['125572', '12576'] torch.Size([255, 1024, 1, 1]) 1.2237467 0.034326684 0.07218943 0.013169406 0.119685516
torch.Size([2, 3, 640, 640])
96
69
54
['125778', '125806'] torch.Size([255, 1024, 1, 1]) 2.1633973 0.03887566 0.040412776 0.042644113 0.12193255
torch.Size([2, 3, 640, 640])
156
129
90
['125850', '125936'] torch.Size([255, 1024, 1, 1]) 3.6832838 0.040077176 0.071259476 0.011344429 0.12268108
torch.Size([2, 3, 640, 640])
48
18
18
['125952', '126107'] torch.Size([255, 1024, 1, 1]) -9.671977 0.03525025 0.02409513 0.022532457 0.081877835
torch.Size([2, 3, 640, 640])
93
129
81
['126110', '126137'] torch.Size([255, 1024, 1, 1]) -0.40954238 0.044246282 0.07575401 0.0087404 0.12874068
torch.Size([2, 3, 640, 640])
111
165
84
['126216', '126226'] torch.Size([255, 1024, 1, 1]) -1.3580791 0.06515468 0.12628624 0.06510949 0.2565504
torch.Size([2, 3, 640, 640])
162
196
69
['12639', '126592'] torch.Size([255, 1024, 1, 1]) -0.6135652 0.034646392 0.05321066 0.003780199 0.091637254
torch.Size([2, 3, 640, 640])
126
219
129
['12667', '12670'] torch.Size([255, 1024, 1, 1]) -0.51434803 0.04655069 0.1378153 0.032982323 0.2173483
torch.Size([2, 3, 640, 640])
117
113
42
['1268', '127092'] torch.Size([255, 1024, 1, 1]) -5.2287445 0.027921278 0.040166534 0.007760976 0.075848795
torch.Size([2, 3, 640, 640])
60
60
30
['127135', '127182'] torch.Size([255, 1024, 1, 1]) -0.60024494 0.030775145 0.037791282 0.016734246 0.08530067
torch.Size([2, 3, 640, 640])
42
99
75
['127263', '127270'] torch.Size([255, 1024, 1, 1]) 2.457407 0.04392572 0.041359857 0.016568175 0.10185375
torch.Size([2, 3, 640, 640])
108
147
84
['127394', '127476'] torch.Size([255, 1024, 1, 1]) -0.54925776 0.027240038 0.071674936 0.020268653 0.11918363
torch.Size([2, 3, 640, 640])
0
15
27
['12748', '127494'] torch.Size([255, 1024, 1, 1]) -6.2484045 0.023608787 0.025247347 0.021331359 0.070187494
torch.Size([2, 3, 640, 640])
12
69
87
['127517', '127530'] torch.Size([255, 1024, 1, 1]) 0.9154651 0.029625554 0.042561844 0.045258425 0.11744582
torch.Size([2, 3, 640, 640])
0
0
27
['127624', '127660'] torch.Size([255, 1024, 1, 1]) -6.1115227 0.023876602 0.015307464 0.022250034 0.061434098
torch.Size([2, 3, 640, 640])
0
9
45
['127955', '127987'] torch.Size([255, 1024, 1, 1]) 1.0583441 0.011254323 0.019415876 0.020278087 0.050948285
torch.Size([2, 3, 640, 640])
27
33
27
['128051', '128112'] torch.Size([255, 1024, 1, 1]) -0.64572775 0.022668371 0.024730364 0.042249385 0.08964812
torch.Size([2, 3, 640, 640])
235
141
54
['128148', '128372'] torch.Size([255, 1024, 1, 1]) -2.792012 0.046341397 0.06441921 0.019119278 0.12987989
torch.Size([2, 3, 640, 640])
36
153
180
['128476', '128598'] torch.Size([255, 1024, 1, 1]) -6.592342 0.036287863 0.13390942 0.08089456 0.25109184
torch.Size([2, 3, 640, 640])
3
15
18
['128654', '128658'] torch.Size([255, 1024, 1, 1]) -3.5392487 0.026434297 0.019537253 0.015974509 0.061946057
torch.Size([2, 3, 640, 640])
117
147
48
['128675', '128699'] torch.Size([255, 1024, 1, 1]) -2.0166638 0.029714147 0.03842955 0.0022270493 0.07037075
torch.Size([2, 3, 640, 640])
111
132
48
['128748', '129054'] torch.Size([255, 1024, 1, 1]) 3.5002384 0.026091436 0.043119963 0.006987337 0.07619874
torch.Size([2, 3, 640, 640])
15
54
36
['129062', '129113'] torch.Size([255, 1024, 1, 1]) -6.274722 0.03869912 0.03243538 0.030136462 0.10127096
torch.Size([2, 3, 640, 640])
0
15
18
['129135', '129322'] torch.Size([255, 1024, 1, 1]) 1.2252959 0.015909432 0.018764604 0.009716639 0.04439067
torch.Size([2, 3, 640, 640])
99
126
60
['129416', '129492'] torch.Size([255, 1024, 1, 1]) -0.117823124 0.032477546 0.050581966 0.032063253 0.115122765
torch.Size([2, 3, 640, 640])
66
90
57
['1296', '129756'] torch.Size([255, 1024, 1, 1]) 2.1137106 0.025930334 0.044463124 0.0016213389 0.072014794
torch.Size([2, 3, 640, 640])
18
39
45
['129812', '129945'] torch.Size([255, 1024, 1, 1]) 0.75150114 0.015015341 0.02744045 0.0056992862 0.048155077
torch.Size([2, 3, 640, 640])
96
69
27
['13004', '130386'] torch.Size([255, 1024, 1, 1]) -0.46662062 0.042892974 0.039870728 0.021477278 0.10424098
torch.Size([2, 3, 640, 640])
12
18
18
['130465', '130566'] torch.Size([255, 1024, 1, 1]) -5.597059 0.03763743 0.0150230285 0.0011188444 0.053779304
torch.Size([2, 3, 640, 640])
6
21
27
['130579', '130586'] torch.Size([255, 1024, 1, 1]) -0.4495253 0.018345607 0.008205967 0.0007550845 0.02730666
torch.Size([2, 3, 640, 640])
6
33
30
['130599', '130613'] torch.Size([255, 1024, 1, 1]) 0.24763548 0.022950698 0.026410714 0.005188871 0.054550283
torch.Size([2, 3, 640, 640])
117
162
81
['130699', '130826'] torch.Size([255, 1024, 1, 1]) -3.160212 0.03365528 0.07579611 0.013208243 0.12265963
torch.Size([2, 3, 640, 640])
60
81
63
['131131', '131138'] torch.Size([255, 1024, 1, 1]) 4.8993397 0.031450465 0.043844797 0.009133896 0.08442916
torch.Size([2, 3, 640, 640])
0
0
12
['131273', '131379'] torch.Size([255, 1024, 1, 1]) -10.538886 0.022247592 0.014462411 0.017944891 0.054654893
torch.Size([2, 3, 640, 640])
0
24
42
['131386', '131431'] torch.Size([255, 1024, 1, 1]) 5.978709 0.018564904 0.026879786 0.0014555857 0.046900276
torch.Size([2, 3, 640, 640])
33
21
24
['131444', '131556'] torch.Size([255, 1024, 1, 1]) -2.4385593 0.05205998 0.0290822 0.0016186447 0.082760826
torch.Size([2, 3, 640, 640])
0
15
39
['13177', '131938'] torch.Size([255, 1024, 1, 1]) -0.26104772 0.012164099 0.019647237 0.009368726 0.04118006
torch.Size([2, 3, 640, 640])
9
42
81
['13201', '132116'] torch.Size([255, 1024, 1, 1]) 0.3703056 0.019722363 0.030575199 0.043333944 0.093631506
torch.Size([2, 3, 640, 640])
48
66
48
['132329', '132375'] torch.Size([255, 1024, 1, 1]) -2.8413484 0.028694872 0.028312497 0.010820757 0.067828126
torch.Size([2, 3, 640, 640])
69
147
99
['132408', '132544'] torch.Size([255, 1024, 1, 1]) -0.6700028 0.037844475 0.06848868 0.015204323 0.12153748
torch.Size([2, 3, 640, 640])
63
45
39
['132587', '132622'] torch.Size([255, 1024, 1, 1]) 1.4639174 0.025634388 0.022731451 0.024476213 0.072842054
torch.Size([2, 3, 640, 640])
12
66
81
['132703', '132796'] torch.Size([255, 1024, 1, 1]) -3.191818 0.04158301 0.03249607 0.043060936 0.11714002
torch.Size([2, 3, 640, 640])
39
81
57
['13291', '132931'] torch.Size([255, 1024, 1, 1]) 1.2250576 0.020573149 0.022137342 0.00742554 0.05013603
torch.Size([2, 3, 640, 640])
51
39
12
['133000', '133087'] torch.Size([255, 1024, 1, 1]) 11.735017 0.03646877 0.031371668 0.0020647107 0.069905154
torch.Size([2, 3, 640, 640])
249
216
87
['133233', '133244'] torch.Size([255, 1024, 1, 1]) -0.7084424 0.05179693 0.10967267 0.0155810295 0.17705064
torch.Size([2, 3, 640, 640])
0
15
33
['133343', '133418'] torch.Size([255, 1024, 1, 1]) -2.04406 0.008022572 0.011356716 0.0026831978 0.022062486
torch.Size([2, 3, 640, 640])
81
24
21
['13348', '133567'] torch.Size([255, 1024, 1, 1]) -0.7607925 0.04246607 0.03352671 0.016367594 0.09236037
torch.Size([2, 3, 640, 640])
30
27
21
['133631', '133645'] torch.Size([255, 1024, 1, 1]) 1.6905135 0.03453912 0.016972408 0.046784382 0.09829591
torch.Size([2, 3, 640, 640])
144
108
42
['133778', '133819'] torch.Size([255, 1024, 1, 1]) 0.8976417 0.03824183 0.044082932 0.007838822 0.09016358
torch.Size([2, 3, 640, 640])
51
135
96
['133969', '134034'] torch.Size([255, 1024, 1, 1]) -2.109769 0.024560628 0.04796208 0.008839521 0.081362225
torch.Size([2, 3, 640, 640])
3
18
48
['134096', '134112'] torch.Size([255, 1024, 1, 1]) -7.149835 0.024011998 0.0392682 0.036616962 0.09989716
torch.Size([2, 3, 640, 640])
87
33
18
['134322', '134689'] torch.Size([255, 1024, 1, 1]) -6.261523 0.03892506 0.0348569 0.01252659 0.086308554
torch.Size([2, 3, 640, 640])
54
22
9
['134722', '134856'] torch.Size([255, 1024, 1, 1]) -0.4441429 0.047609445 0.015948292 0.024140576 0.08769831
torch.Size([2, 3, 640, 640])
180
144
51
['134882', '134886'] torch.Size([255, 1024, 1, 1]) -10.206522 0.04834947 0.063884445 0.013704352 0.12593827
torch.Size([2, 3, 640, 640])
33
123
102
['1353', '135410'] torch.Size([255, 1024, 1, 1]) 0.7396289 0.03279803 0.07171455 0.019338358 0.12385094
torch.Size([2, 3, 640, 640])
87
78
27
['13546', '135561'] torch.Size([255, 1024, 1, 1]) 10.916278 0.03155111 0.044001512 0.009694073 0.0852467
torch.Size([2, 3, 640, 640])
18
18
18
['135604', '135670'] torch.Size([255, 1024, 1, 1]) -2.8356233 0.024589894 0.013174445 0.0020080574 0.0397724
torch.Size([2, 3, 640, 640])
69
66
36
['135673', '135872'] torch.Size([255, 1024, 1, 1]) -2.0896354 0.025389537 0.025307471 0.0069021536 0.05759916
torch.Size([2, 3, 640, 640])
102
39
18
['135890', '135902']504000 63809331
here
44590 68371209
here
554266 61786792
here
68409 56345096
here
209972 94522566
here
118515 72445170
here
450439 49863312
here
546556 76764521
here
 torch.Size([255, 1024, 1, 1]) -4.6572576 0.026922205 0.021806298 0.014876092 0.06360459
torch.Size([2, 3, 640, 640])
12
18
18
['13597', '136033'] torch.Size([255, 1024, 1, 1]) -8.103179 0.030763213 0.012859091 0.025541905 0.06916421
torch.Size([2, 3, 640, 640])
298251 47300186
here
205333 48768891
here
449661 42336685
here
485237 43394520
here
190676 66025483
here
493566 50175671
here
329614 26766923
here
485480 55964910
here
100274 100386794
here
100283 55680764
here
100510 69740321
here
100582 93902835
here
10092 88219589
here
101022 79114960
here
101762 108042365
here
101780 94075459
here
102331 76404922
here
102356 78636779
here
102707 133054546
here
102805 97457820
here
103585 88987362
here
10363 41459981
here
104198 85738108
here
104424 87748211
here
104603 86260964
here
104612 61646937
here
104669 57827062
here
104782 73181142
here
105249 68136493
here
105264 103794505
here
10583 156091002
here
105912 62614496
here
106235 91004068
here
106266 96566448
here
106389 110644393
here
106563 125284899
here
106912 162743605
here
10707 98860742
here
107226 99301812
here
107339 13508680
here
107851 137905516
here
108026 32269350
here
108440 94745332
here
108495 57614119
here
109055 92815036
here
109118 86702344
here
10977 92399867
here
109798 51192836
here
109916 89546993
here
10995 52329644
here
110042 88761026
here
110211 83127724
here
110449 41510308
here
11051 91716506
here
110784 97668335
here
110884 110590426
here
111036 44215642
here
111086 50778123
here
11122 101934722
here
11149 69798775
here
11197 72128485
here
112110 66999429
here
112626 99216141
here
112634 92166605
here
113051 57178885
here
113235 99111558
here
113589 126837303
here
113720 85441290
here
114770 91698621
here
114871 138473265
here
11511 68937228
here
115118 73158462
here
115885 59150744
here
115898 109047616
here
11615 112733779
here
116206 87328839
here
116439 61481691
here
116479 59644143
here
11699 74863582
here
117197 107242827
here
117492 53035302
here
117525 63608637
here
117719 31829281
here
117744 87755457
here
11813 63522912
here
118209 121107668
here
118515 72445170
here
118594 123281780
here
119088 71154097
here
119233 38522802
here
119452 109350344
here
119516 43276990
here
119828 42522430
here
119911 110936196
here
120572 97189636
here
120584 96947868
here
120853 92211709
here
121031 108735016
here
121242 96577512
here
121417 115540318
here
121586 113449779
here
121591 103417167
here
122046 91278639
here
122166 141216485
here
122672 76985735
here
122745 9070084
here
122962 69044200
here
122969 38686641
here
123321 96024799
here
123480 123144735
here
124277 80794670
here
124442 90543546
here
124798 86590005
here
124975 101865505
here
125129 54443631
here
125211 120425188
here
125405 132972002
here
125472 149974634
here
125778 83263016
here
125806 74365180
here
125952 98851677
here
126107 161090933
here
126216 94170625
here
126226 96339391
here
12667 120005041
here
12670 66007751
here
127135 102244857
here
127182 90832565
here
127394 64220372
here
127476 106589465
here
127517 133332760
here
127530 79973937
here
127955 74701106
here
127987 106506204
here
128148 102240816
here
128372 134712298
here
128654 86623247
here
128658 120692747
here
128748 84195969
here
129054 74488788
here
129135 89288886
here
129322 96208812
here
1296 82961792
here
129756 100647238
here
13004 59163055
here
130386 78557669
here
130579 67775484
here
130586 121854513
here
130699 51927613
here
130826 111862372
here
131273 79087143
here
131379 115016854
here
131444 88224407
here
131556 158187578
here
13201 93678878
here
132116 95341771
here
132408 84017769
here
132544 66351270
here
132703 132604317
here
132796 61527974
here
133000 88256557
here
133087 51860589
here
133343 22232349
here
133418 74957434
here
133631 70983081
here
133645 48270341
here
133969 83374528
here
134034 69048073
here
134322 153779738
here
134689 102529859
here
134882 184686274
here
134886 137794175
here
13546 77150060
here
135561 77727937
here
135673 156431793
here
135872 71237429
here
13597 113094544
here
136033 68895147
here
136466 56328356
here
13659 79853330
here
136715 64465272
here
136772 84981898
here
96549 34987972
here
527220 22017379
here
161044 70276062
here
490413 76075231
here
438226 71730898
here
312278 55946865
here
194216 44648504
here
519039 60237154
here
375469 54482500
here
460682 43614468
here
185473 10181765
here
143068 77595293
here
509014 114980106
here
311883 87943243
here
578500 67394229
here
242934 25654411
here
